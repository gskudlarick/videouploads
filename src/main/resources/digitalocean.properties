# Digital Ocean Server
# $ java -jar myproject.jar --spring.config.name=myproject

spring.http.multipart.max-file-size=128MB
spring.http.multipart.max-request-size=128MB



#MACHINE DIGITALOCEAN UBUNTU 14.4
api.mysql.connection.string=jdbc:mysql://localhost:3306/vz_db
api.config.uploaddir=/upload
api.config.ffprobe.bin=/usr/bin/ffprobe
api.config.ffmpeg.bin=/usr/bin/ffmpeg
api.config.python.bin=/usr/bin/python
api.config.gregspritesv1=/home/gskudlarick/vz/gregspritesv1.py

#Image Magick
api.config.mogrify=/usr/bin/mogrify
api.config.identify=/usr/bin/identify
api.config.montage=/usr/bin/montage

#Logging
logging.file=logs/spring-boot-logging.log
spring.output.ansi.enabled=always

logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO

#
#  KEEP AT BOTTOM OF FILE
#
# https://docs.spring.io/spring-boot/docs/current/reference/html/howto-database-initialization.html
#to run the data.sql file
# Spring Data --autowires to Data Source 'datasource' 
spring.datasource.url=jdbc:mysql://localhost:3306/vz_db
spring.datasource.username=api
spring.datasource.password=api100
# create for DDL, then disables, from @Entity or create.sql  ****TODO*** create->none
spring.jpa.hibernate.ddl-auto=create
# will log DDL Statements
logging.level.org.hibernate.SQL=debug
# runs statements in classpath data.sql
spring.datasource.initialize=false

#
# Support for TRANSCODING_PIPELINE file processing
# -keep it configuration based.
#
transcoding.assets.dest.dir=/var/www/html/vz/ASSETS/
transcoding.thumbs.processing.dir=thumbs/
transcoding.upload.dir=upload-dir/
transcoding.pipeline.processing.list=_sprite.jpg,_thumbs.json
transcoding.pipeline.asset.list=_sprite.jpg,_thumbs.json,.mp4


# HLS Processing. prototype. **REFACTOR ASAP** after you try .mpd and see pattern.
transcoding.assets.dest.dir.hls=/var/www/html/vz/ASSETS/HLS/
transcoding.hls.processing.dir=hls/

transcoding.output.base.url=https://exsracing.com/vz/ASSETS/

spring.env=prod